---
source: near-sdk-macros/src/core_impl/code_generator/item_impl_info.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
#[cfg(target_arch = "wasm32")]
#[no_mangle]
pub extern "C" fn method() {
    ::near_sdk::env::setup_panic_hook();
    if ::near_sdk::env::attached_deposit().as_yoctonear() != 0 {
        ::near_sdk::env::panic_str("Method method doesn't accept deposit");
    }
    #[derive(::near_sdk::serde::Deserialize)]
    #[serde(crate = "::near_sdk::serde")]
    struct Input {
        k: u64,
        m: Bar,
    }
    let Input { k, m }: Input = match ::near_sdk::env::input() {
        Some(input) => {
            match ::near_sdk::serde_json::from_slice(&input) {
                Ok(deserialized) => deserialized,
                Err(_) => {
                    ::near_sdk::env::panic_str("Failed to deserialize input from JSON.")
                }
            }
        }
        None => ::near_sdk::env::panic_str("Expected input since method has arguments."),
    };
    let mut contract: Hello = ::near_sdk::env::state_read().unwrap_or_default();
    Hello::method(&mut contract, k, m);
    ::near_sdk::env::state_write(&contract);
}
