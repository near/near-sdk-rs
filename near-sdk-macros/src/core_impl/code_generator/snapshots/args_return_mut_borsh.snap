---
source: near-sdk-macros/src/core_impl/code_generator/item_impl_info.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
#[cfg(target_arch = "wasm32")]
#[no_mangle]
pub extern "C" fn method() {
    ::near_sdk::env::setup_panic_hook();
    if ::near_sdk::env::attached_deposit().as_yoctonear() != 0 {
        ::near_sdk::env::panic_str("Method method doesn't accept deposit");
    }
    #[derive(::near_sdk::borsh::BorshDeserialize)]
    #[borsh(crate = "::near_sdk::borsh")]
    struct Input {
        k: u64,
        m: Bar,
    }
    let Input { k, m }: Input = ::near_sdk::borsh::BorshDeserialize::try_from_slice(
            &::near_sdk::env::input()
                .expect("Expected input since method has arguments."),
        )
        .expect("Failed to deserialize input from Borsh.");
    let mut contract: Hello = ::near_sdk::env::state_read().unwrap_or_default();
    let result = contract.method(k, m);
    let result = ::near_sdk::borsh::to_vec(&result)
        .expect("Failed to serialize the return value using Borsh.");
    ::near_sdk::env::value_return(&result);
    ::near_sdk::env::state_write(&contract);
}

