[package]
name = "near-sdk"
version.workspace = true
authors = ["Near Inc <max@nearprotocol.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
readme = "README.md"
categories = ["wasm"]
repository = "https://github.com/near/near-sdk-rs"
homepage = "https://near-sdk.io"
description = """
Rust library for writing NEAR smart contracts.
"""

[[test]]
name = "compilation_tests"
path = "compilation_tests/all.rs"
required-features = ["abi", "unstable"]

[dependencies]
# Provide near_bidgen macros.
serde = { version = "1", features = ["derive"] }
serde_json = "1"
near-sdk-macros = { path = "../near-sdk-macros", version = "~4.1.1" }
near-sys = { path = "../near-sys", version = "0.2" }
base64 = "0.13"
borsh = { version = "0.9", features = ["const-generics"] }
bs58 = "0.4"
schemars = { version = "0.8.8", optional = true }
# Export dependencies for contracts
wee_alloc = { version = "0.4.5", default-features = false, optional = true }

# Used for caching, might be worth porting only functionality needed.
once_cell = { version = "1.17", default-features = false }

near-abi = { version = "0.3.0", features = ["__chunked-entries"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
near-vm-logic = { version = "0.17", optional = true }
near-primitives-core = { version = "0.17", optional = true }
near-primitives = { version = "0.17", optional = true }
near-crypto = { version = "0.17", optional = true }

[dev-dependencies]
rand = "0.8.4"
trybuild = "1.0"
rustversion = "1.0"
rand_xorshift = "0.3"
quickcheck = "1.0"
arbitrary = { version = "1.2.3", features = ["derive"] }
derive_arbitrary = "1.2.3"
hex = { version = "0.4.3", features = ["serde"] }

[features]
default = ["wee_alloc", "unit-testing", "legacy", "abi"]
expensive-debug = []
unstable = []
legacy = []
abi = ["near-abi", "schemars", "near-sdk-macros/abi"]
unit-testing = ["near-vm-logic", "near-primitives-core", "near-primitives", "near-crypto"]

__abi-embed = ["near-sdk-macros/__abi-embed"]
__abi-generate = ["abi", "near-sdk-macros/__abi-generate"]

[package.metadata.docs.rs]
features = ["unstable", "legacy"]
